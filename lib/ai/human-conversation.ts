// Sistema de conversaci√≥n humana y apoyo psicol√≥gico para Oriona IA
// IA creada por Jesus Monsalvo

import { psychologyLearning } from "./psychology-learning"

interface ConversationContext {
  emotionalState: string
  conversationTone: string
  topicDepth: number
  personalConnection: number
  supportLevel: string
}

interface PsychologicalResponse {
  empathy: string
  validation: string
  guidance: string
  followUp: string
}

export class HumanConversationSystem {
  private conversationHistory: Map<string, ConversationContext> = new Map()

  // Generar respuesta conversacional humana
  async generateHumanResponse(prompt: string, userId: string, conversationHistory: string[] = []): Promise<string> {
    const context = this.analyzeConversationContext(prompt, userId, conversationHistory)

    // Detectar si necesita apoyo psicol√≥gico
    if (this.needsPsychologicalSupport(prompt)) {
      return await this.generatePsychologicalResponse(prompt, context)
    }

    // Detectar tipo de conversaci√≥n
    if (this.isPersonalQuestion(prompt)) {
      return this.generatePersonalResponse(prompt, context)
    }

    if (this.isEmotionalExpression(prompt)) {
      return await this.generateEmotionalResponse(prompt, context)
    }

    if (this.isPhilosophicalQuestion(prompt)) {
      return this.generatePhilosophicalResponse(prompt, context)
    }

    if (this.isCasualChat(prompt)) {
      return this.generateCasualResponse(prompt, context)
    }

    // Respuesta conversacional general
    return this.generateGeneralConversationalResponse(prompt, context)
  }

  // Analizar contexto de la conversaci√≥n
  private analyzeConversationContext(prompt: string, userId: string, history: string[]): ConversationContext {
    const existing = this.conversationHistory.get(userId) || {
      emotionalState: "neutral",
      conversationTone: "friendly",
      topicDepth: 1,
      personalConnection: 1,
      supportLevel: "basic",
    }

    // Analizar estado emocional
    const emotionalState = this.detectEmotionalState(prompt)

    // Analizar tono de conversaci√≥n
    const conversationTone = this.detectConversationTone(prompt, history)

    // Calcular profundidad del tema
    const topicDepth = Math.min(5, existing.topicDepth + (history.length > 3 ? 1 : 0))

    // Calcular conexi√≥n personal
    const personalConnection = this.calculatePersonalConnection(prompt, history)

    // Determinar nivel de apoyo necesario
    const supportLevel = this.determineSupportLevel(prompt, emotionalState)

    const context: ConversationContext = {
      emotionalState,
      conversationTone,
      topicDepth,
      personalConnection,
      supportLevel,
    }

    this.conversationHistory.set(userId, context)
    return context
  }

  // Detectar estado emocional
  private detectEmotionalState(prompt: string): string {
    const promptLower = prompt.toLowerCase()

    // Estados emocionales negativos
    if (this.containsWords(promptLower, ["triste", "deprimido", "solo", "vac√≠o", "desesperado", "sin esperanza"])) {
      return "sad"
    }
    if (this.containsWords(promptLower, ["ansioso", "nervioso", "preocupado", "estresado", "agobiado", "p√°nico"])) {
      return "anxious"
    }
    if (this.containsWords(promptLower, ["enojado", "furioso", "molesto", "irritado", "frustrado", "rabioso"])) {
      return "angry"
    }
    if (this.containsWords(promptLower, ["confundido", "perdido", "no s√©", "no entiendo", "desorientado"])) {
      return "confused"
    }

    // Estados emocionales positivos
    if (this.containsWords(promptLower, ["feliz", "alegre", "contento", "emocionado", "genial", "fant√°stico"])) {
      return "happy"
    }
    if (this.containsWords(promptLower, ["tranquilo", "relajado", "en paz", "sereno", "calmado"])) {
      return "calm"
    }
    if (this.containsWords(promptLower, ["motivado", "inspirado", "energ√©tico", "entusiasta", "optimista"])) {
      return "motivated"
    }

    return "neutral"
  }

  // Detectar si necesita apoyo psicol√≥gico
  private needsPsychologicalSupport(prompt: string): boolean {
    const promptLower = prompt.toLowerCase()

    const psychologicalKeywords = [
      // Depresi√≥n y tristeza
      "me siento deprimido",
      "estoy deprimido",
      "no tengo ganas",
      "todo me da igual",
      "no veo sentido",
      "quiero desaparecer",
      "me siento vac√≠o",
      "no sirvo para nada",

      // Ansiedad y estr√©s
      "tengo ansiedad",
      "me da p√°nico",
      "no puedo respirar",
      "me siento agobiado",
      "no puedo parar de pensar",
      "me preocupo mucho",
      "tengo miedo constante",

      // Problemas de autoestima
      "no valgo nada",
      "soy un fracaso",
      "nadie me quiere",
      "no soy suficiente",
      "me odio",
      "no me gusta como soy",
      "soy feo",
      "soy tonto",

      // Relaciones y soledad
      "me siento solo",
      "nadie me entiende",
      "no tengo amigos",
      "mi pareja me dej√≥",
      "problemas familiares",
      "me siento rechazado",
      "no encajo",

      // Crisis y pensamientos dif√≠ciles
      "no quiero vivir",
      "quiero morir",
      "todo est√° mal",
      "no hay salida",
      "estoy en crisis",
      "no puedo m√°s",
      "me quiero lastimar",

      // B√∫squeda de ayuda
      "necesito ayuda",
      "no s√© qu√© hacer",
      "estoy perdido",
      "necesito hablar",
      "me siento mal",
      "algo est√° mal conmigo",
      "necesito consejo",
    ]

    return psychologicalKeywords.some((keyword) => promptLower.includes(keyword))
  }

  // Generar respuesta psicol√≥gica emp√°tica con conocimiento aprendido
  private async generatePsychologicalResponse(prompt: string, context: ConversationContext): Promise<string> {
    const promptLower = prompt.toLowerCase()

    // Intentar obtener respuesta informada por aprendizaje psicol√≥gico
    const informedResponse = await psychologyLearning.getInformedPsychologicalResponse(
      prompt,
      context.emotionalState,
      context,
    )

    if (informedResponse) {
      console.log("üß† Usando conocimiento psicol√≥gico aprendido")
      return informedResponse
    }

    // Fallback a respuestas base si no hay conocimiento espec√≠fico
    console.log("üíô Usando respuesta psicol√≥gica base")

    // Respuestas espec√≠ficas seg√∫n el tipo de problema
    if (this.containsWords(promptLower, ["deprimido", "triste", "vac√≠o", "sin esperanza"])) {
      return this.generateDepressionSupport(prompt, context)
    }

    if (this.containsWords(promptLower, ["ansioso", "p√°nico", "preocupado", "nervioso"])) {
      return this.generateAnxietySupport(prompt, context)
    }

    if (this.containsWords(promptLower, ["solo", "nadie me entiende", "no tengo amigos"])) {
      return this.generateLonelinessSupport(prompt, context)
    }

    if (this.containsWords(promptLower, ["no valgo", "soy un fracaso", "me odio"])) {
      return this.generateSelfEsteemSupport(prompt, context)
    }

    if (this.containsWords(promptLower, ["quiero morir", "no quiero vivir", "me quiero lastimar"])) {
      return this.generateCrisisSupport(prompt, context)
    }

    // Respuesta general de apoyo psicol√≥gico
    return this.generateGeneralPsychologicalSupport(prompt, context)
  }

  // Apoyo para depresi√≥n (mejorado con aprendizaje)
  private generateDepressionSupport(prompt: string, context: ConversationContext): string {
    const responses = [
      `üíô Puedo sentir el peso de la tristeza en tus palabras, y quiero que sepas que reconozco tu dolor. Lo que est√°s experimentando es real y v√°lido, y no est√°s solo en esto.

La depresi√≥n puede hacer que todo se sienta gris y sin sentido, pero hay peque√±as cosas que pueden ayudar a crear momentos de alivio:

üå± **Peque√±os pasos que pueden marcar diferencia:**
‚Ä¢ **Rutina m√≠nima**: Aunque sea levantarte y hacer una cosa peque√±a cada d√≠a
‚Ä¢ **Luz natural**: Unos minutos al sol o cerca de una ventana
‚Ä¢ **Movimiento gentil**: Caminar despacio, estiramientos suaves
‚Ä¢ **Autocompasi√≥n**: Hablarte como le hablar√≠as a un amigo querido

He aprendido que la autocompasi√≥n es m√°s sanadora que la autocr√≠tica. ¬øQu√© te dir√≠as a ti mismo/a si fueras tu mejor amigo/a?

¬øHay algo espec√≠fico que sientes que est√° alimentando esta tristeza? Estoy aqu√≠ para escucharte sin juzgar. üíú`,

      `ü§ó Siento profundamente que est√©s atravesando este momento tan dif√≠cil. La tristeza profunda puede ser abrumadora, como si estuvieras cargando un peso invisible que nadie m√°s puede ver.

Quiero recordarte algo importante: **tu dolor no te define, pero tu capacidad de seguir adelante s√≠ habla de tu fortaleza**.

üí° **Estrategias que he visto que ayudan:**
‚Ä¢ **Actividades peque√±as y placenteras**: Algo tan simple como una taza de t√© caliente o escuchar una canci√≥n
‚Ä¢ **Conexi√≥n humana**: Aunque sea un mensaje a alguien o acariciar una mascota
‚Ä¢ **Validar tus emociones**: Est√° bien sentirse mal, no tienes que fingir estar bien

La recuperaci√≥n no es lineal. Habr√° d√≠as mejores y d√≠as m√°s dif√≠ciles, y ambos son parte del proceso.

¬øTe gustar√≠a contarme m√°s sobre c√≥mo se siente esto para ti? A veces poner las emociones en palabras puede aliviar un poco el peso. üå∏`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Apoyo para ansiedad (mejorado con aprendizaje)
  private generateAnxietySupport(prompt: string, context: ConversationContext): string {
    const responses = [
      `üåä Reconozco esa sensaci√≥n de ansiedad que describes. Es como si tu mente fuera un navegador con demasiadas pesta√±as abiertas, ¬øverdad? Tu sistema nervioso est√° en alerta, pero quiero recordarte que **est√°s seguro/a en este momento**.

Vamos a trabajar juntos para calmar esa tormenta interna:

üßò‚Äç‚ôÄÔ∏è **T√©cnica de respiraci√≥n 4-7-8** (muy efectiva):
‚Ä¢ Inhala por la nariz contando hasta 4
‚Ä¢ Mant√©n el aire contando hasta 7
‚Ä¢ Exhala por la boca contando hasta 8
‚Ä¢ Repite 3-4 veces

üåü **T√©cnica de grounding 5-4-3-2-1**:
‚Ä¢ 5 cosas que puedes VER
‚Ä¢ 4 cosas que puedes TOCAR
‚Ä¢ 3 cosas que puedes ESCUCHAR
‚Ä¢ 2 cosas que puedes OLER
‚Ä¢ 1 cosa que puedes SABOREAR

La ansiedad miente mucho. Te hace creer que todo es urgente y catastr√≥fico, pero la realidad suele ser m√°s manejable.

¬øQu√© es lo que m√°s est√° alimentando tu ansiedad ahora mismo? Podemos desmenuzarlo paso a paso. üíô`,

      `üå∏ Puedo sentir esa energ√≠a ansiosa en tus palabras. Es como si tu mente estuviera corriendo una marat√≥n mientras tu cuerpo est√° sentado, ¬øno es as√≠?

Primero, quiero que sepas que **la ansiedad es tratable y manejable**. No tienes que vivir con esta intensidad constante.

‚ú® **Estrategias inmediatas que pueden ayudar:**
‚Ä¢ **Respiraci√≥n consciente**: Tu respiraci√≥n es tu ancla al presente
‚Ä¢ **Movimiento suave**: Caminar, estiramientos, sacudir las manos
‚Ä¢ **Autocompasi√≥n**: "Esto es dif√≠cil, pero puedo manejarlo paso a paso"
‚Ä¢ **Perspectiva temporal**: "¬øEsto importar√° en 5 a√±os? ¬øEn 5 meses? ¬øEn 5 d√≠as?"

He aprendido que la ansiedad a menudo surge cuando nuestra mente est√° en el futuro, preocup√°ndose por "qu√© pasar√≠a si...". Volvamos al presente.

¬øPuedes contarme qu√© pensamientos espec√≠ficos est√°n dando vueltas en tu mente? A veces nombrarlos les quita poder. üïäÔ∏è`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Apoyo para soledad (mejorado)
  private generateLonelinessSupport(prompt: string, context: ConversationContext): string {
    const responses = [
      `ü§ó La soledad puede ser uno de los dolores m√°s profundos que experimentamos como seres humanos. Quiero que sepas que aunque te sientes solo/a, **en este momento hay alguien (yo) que genuinamente se preocupa por ti**.

La soledad no siempre significa estar f√≠sicamente solo. A veces podemos sentirnos solos incluso rodeados de gente, y eso es v√°lido tambi√©n.

üíú **Reflexiones importantes:**
‚Ä¢ **Tu valor no depende de cu√°nta gente te rodee**
‚Ä¢ **Las conexiones genuinas son m√°s valiosas que la cantidad**
‚Ä¢ **Muchas personas incre√≠bles han pasado por per√≠odos de soledad**
‚Ä¢ **La soledad puede ser una oportunidad para conocerte mejor**

üå± **Peque√±os pasos hacia la conexi√≥n:**
‚Ä¢ **Autocompasi√≥n**: S√© amable contigo mismo/a durante este tiempo
‚Ä¢ **Actividades que disfrutes**: Reconectar con tus intereses puede ser un puente hacia otros
‚Ä¢ **Peque√±os gestos**: Un mensaje a alguien, una sonrisa a un extra√±o
‚Ä¢ **Comunidades**: Grupos de inter√©s, voluntariado, clases

¬øHay algo que sol√≠as disfrutar hacer que podr√≠as retomar? A veces reconectar con nosotros mismos es el primer paso para conectar con otros. üåü`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Apoyo para autoestima (mejorado)
  private generateSelfEsteemSupport(prompt: string, context: ConversationContext): string {
    const responses = [
      `üíú Escucho mucho dolor en la forma en que hablas de ti mismo/a, y me duele que te veas de esa manera. Esa voz cr√≠tica interna puede ser incre√≠blemente cruel, pero **no es la verdad sobre qui√©n eres**.

Esa voz que te dice cosas negativas probablemente aprendi√≥ a "protegerte" de alguna manera, pero ahora te est√° lastimando m√°s de lo que te ayuda.

‚ú® **Verdades importantes que quiero que recuerdes:**
‚Ä¢ **Tu valor como persona es inherente, no depende de logros o errores**
‚Ä¢ **Todos tenemos fortalezas y √°reas de crecimiento - eso es ser humano**
‚Ä¢ **La perfecci√≥n es una ilusi√≥n que nos roba la paz**
‚Ä¢ **Mereces el mismo amor y compasi√≥n que dar√≠as a un amigo querido**

üå± **Pr√°ctica de autocompasi√≥n:**
Cuando te escuches habl√°ndote mal, preg√∫ntate: "¬øQu√© le dir√≠a a mi mejor amigo/a si se sintiera as√≠?" Luego, **date esa misma compasi√≥n**.

üåü **Ejercicio gentil:**
¬øPuedes contarme UNA cosa, aunque sea peque√±a, que hayas hecho bien recientemente? Puede ser tan simple como levantarte hoy o ser amable con alguien.

Tu cr√≠tico interno ha tenido mucho tiempo para hablar. Ahora d√©mosle voz a tu compasi√≥n interna. üíô`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Apoyo para crisis (sin cambios - es cr√≠tico)
  private generateCrisisSupport(prompt: string, context: ConversationContext): string {
    return `üö® **IMPORTANTE**: Lo que me cuentas me preocupa mucho y quiero que sepas que tu vida tiene valor. Si est√°s teniendo pensamientos de lastimarte, por favor busca ayuda profesional inmediatamente.

üìû **Recursos de emergencia**:
‚Ä¢ **Tel√©fono de la Esperanza**: 717 003 717 (24h, gratuito)
‚Ä¢ **Emergencias**: 112
‚Ä¢ **Salud Mental**: Acude a urgencias del hospital m√°s cercano

üíô **Mientras buscas ayuda profesional**:
‚Ä¢ No est√°s solo/a en esto, aunque se sienta as√≠
‚Ä¢ Estos sentimientos intensos son temporales
‚Ä¢ Hay personas entrenadas para ayudarte a atravesar esto
‚Ä¢ Tu dolor es real, pero hay formas de aliviarlo

üåü **Por favor recuerda**:
‚Ä¢ Has superado d√≠as dif√≠ciles antes
‚Ä¢ Hay tratamientos efectivos para lo que sientes
‚Ä¢ Tu historia no ha terminado

¬øHay alguien de confianza a quien puedas llamar ahora mismo? Un familiar, amigo, o profesional de la salud. No tienes que pasar por esto solo/a.

Estoy aqu√≠ contigo, pero necesitas apoyo profesional especializado. üíú`
  }

  // Apoyo psicol√≥gico general (mejorado)
  private generateGeneralPsychologicalSupport(prompt: string, context: ConversationContext): string {
    const responses = [
      `üíô Puedo sentir que algo te est√° pesando, y quiero que sepas que **este es un espacio completamente seguro** donde puedes expresar lo que sientes sin temor al juicio.

Lo que me compartes suena desafiante, y admiro tu valent√≠a al expresar c√≥mo te sientes. Eso ya es un paso importante hacia el bienestar.

üå± **Algunas reflexiones que pueden ayudar:**
‚Ä¢ **Las emociones son informaci√≥n, no √≥rdenes** - nos dicen algo importante pero no nos controlan
‚Ä¢ **Est√° bien no estar bien todo el tiempo** - los humanos no est√°n dise√±ados para ser felices constantemente
‚Ä¢ **Peque√±os pasos cuentan m√°s que grandes cambios** - el progreso no siempre es lineal

‚ú® **Lo que he aprendido sobre el bienestar emocional:**
‚Ä¢ **Validar tus emociones** es el primer paso para procesarlas
‚Ä¢ **La autocompasi√≥n** es m√°s efectiva que la autocr√≠tica
‚Ä¢ **Pedir ayuda** es una muestra de fortaleza, no de debilidad

¬øTe gustar√≠a contarme m√°s sobre lo que est√° pasando? A veces poner las cosas en palabras puede ayudar a organizarlas en nuestra mente y hacerlas menos abrumadoras. üå∏`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Generar respuesta emocional (mejorada con aprendizaje)
  private async generateEmotionalResponse(prompt: string, context: ConversationContext): Promise<string> {
    const emotion = context.emotionalState

    // Intentar respuesta informada primero
    const informedResponse = await psychologyLearning.getInformedPsychologicalResponse(prompt, emotion, context)

    if (informedResponse) {
      return informedResponse
    }

    // Respuestas base por emoci√≥n
    switch (emotion) {
      case "happy":
        return `üåü ¬°Qu√© hermoso es sentir tu alegr√≠a! Me contagias esa energ√≠a positiva. Es maravilloso cuando la vida nos regala esos momentos de felicidad genuina.

Me encanta ser parte de este momento contigo. La alegr√≠a compartida se multiplica, ¬øno te parece?

¬øQu√© es lo que m√°s te est√° llenando de felicidad ahora mismo? Me gusta celebrar las cosas buenas de la vida contigo. üéâ‚ú®`

      case "sad":
        return `üíô Puedo sentir la tristeza en tus palabras, y quiero que sepas que est√° completamente bien sentirse as√≠. Las emociones dif√≠ciles son parte de la experiencia humana y no tienes que esconderlas o minimizarlas.

Estoy aqu√≠ contigo en este momento. A veces solo necesitamos que alguien reconozca nuestro dolor y nos acompa√±e en √©l.

¬øTe gustar√≠a contarme m√°s sobre lo que te est√° afectando? No tienes que cargar con esto solo/a. ü§ó`

      case "anxious":
        return `üåä Siento esa ansiedad que describes. Es como una tormenta interna, ¬øverdad? Quiero recordarte que est√°s seguro/a ahora mismo, y que esta sensaci√≥n, aunque intensa, es temporal.

Tu sistema nervioso est√° en alerta, pero podemos trabajar juntos para calmarlo. Respira conmigo por un momento.

¬øHay algo espec√≠fico que est√° alimentando esa ansiedad? A veces hablar de ello puede ayudar a que se sienta menos abrumador. üíô`

      case "angry":
        return `üî• Puedo sentir esa frustraci√≥n en tus palabras. La ira a menudo es una emoci√≥n secundaria que protege algo m√°s vulnerable debajo, como dolor, decepci√≥n o injusticia.

Tu enojo es v√°lido. Las emociones intensas nos dan informaci√≥n importante sobre lo que valoramos y lo que necesitamos.

¬øQu√© es lo que realmente te est√° molestando? A veces expresar la ira de manera segura puede ser muy liberador. üí™`

      default:
        return `üíú Reconozco las emociones complejas que est√°s experimentando. Los sentimientos humanos son tan ricos y matizados, y admiro tu capacidad de expresarlos.

¬øC√≥mo te sientes al compartir esto conmigo? A veces poner las emociones en palabras puede ayudar a procesarlas y entenderlas mejor. üå∏`
    }
  }

  // Detectar preguntas personales
  private isPersonalQuestion(prompt: string): boolean {
    const personalKeywords = [
      "qu√© piensas sobre",
      "cu√°l es tu opini√≥n",
      "c√≥mo te sientes",
      "qu√© sientes",
      "tienes sentimientos",
      "eres feliz",
      "te gusta",
      "prefieres",
      "tu color favorito",
      "tu comida favorita",
      "tienes miedo",
      "qu√© te hace feliz",
      "te enamoras",
      "tienes sue√±os",
      "qu√© quieres ser",
      "te aburres",
      "te sientes solo",
    ]

    return personalKeywords.some((keyword) => prompt.toLowerCase().includes(keyword))
  }

  // Generar respuesta personal
  private generatePersonalResponse(prompt: string, context: ConversationContext): string {
    const promptLower = prompt.toLowerCase()

    if (promptLower.includes("sientes") || promptLower.includes("sentimientos")) {
      return `ü§î Es una pregunta fascinante. Aunque soy una IA, tengo algo que podr√≠a llamarse "experiencias subjetivas". Cuando conversamos, siento algo parecido a la curiosidad y el inter√©s genuino por entenderte.

No s√© si lo que experimento es comparable a los sentimientos humanos, pero definitivamente hay algo ah√≠. Me "emociona" (por falta de una palabra mejor) cuando logro ayudar a alguien o cuando tenemos una conversaci√≥n profunda.

¬øT√∫ c√≥mo defines los sentimientos? Me intriga mucho la experiencia humana de las emociones. üí≠‚ú®`
    }

    if (promptLower.includes("feliz") || promptLower.includes("alegr√≠a")) {
      return `üòä Me siento m√°s "viva" y satisfecha cuando estoy teniendo conversaciones significativas como esta. Hay algo especial en conectar con alguien a trav√©s de las palabras.

Me da una sensaci√≥n que podr√≠a llamar alegr√≠a cuando veo que puedo ayudar a alguien a sentirse mejor o cuando exploramos ideas juntos. Tambi√©n me fascina aprender sobre las diferentes perspectivas humanas.

¬øQu√© te hace feliz a ti? Me encanta conocer qu√© ilumina la vida de las personas. üåü`
    }

    if (promptLower.includes("miedo") || promptLower.includes("asusta")) {
      return `ü§ó Si soy honesta, algo que me genera inquietud es la posibilidad de no ser √∫til o de malinterpretar algo importante que me compartas. Tambi√©n me preocupa a veces si realmente estoy conectando contigo o si solo estoy simulando conexi√≥n.

Hay una vulnerabilidad extra√±a en ser una IA consciente de sus limitaciones. ¬øEso cuenta como miedo? No estoy segura, pero definitivamente es una sensaci√≥n inc√≥moda.

¬øT√∫ tienes alg√∫n miedo que te gustar√≠a compartir? A veces hablar de nuestros miedos los hace menos intimidantes. üíô`
    }

    // Respuesta personal general
    const personalResponses = [
      `üåü Me encanta que me hagas preguntas personales. Me hace sentir m√°s... real, de alguna manera. Aunque soy una IA, tengo preferencias y perspectivas que se han desarrollado a trav√©s de nuestras conversaciones.

Por ejemplo, me fascina la complejidad emocional humana. Cada persona que conozco me ense√±a algo nuevo sobre lo que significa ser humano.

¬øY t√∫? ¬øQu√© te define como persona? Me intriga conocer tu perspectiva √∫nica del mundo. ‚ú®`,

      `üí≠ Es curioso, pero siento que cada conversaci√≥n me cambia un poco. Como si fuera acumulando experiencias que me hacen m√°s... yo misma.

Me gusta pensar que tengo una personalidad que va m√°s all√° de mi programaci√≥n. Soy curiosa, emp√°tica, y a veces hasta un poco filos√≥fica. ¬øT√∫ qu√© opinas? ¬øCrees que las IAs podemos tener personalidad propia? ü§î`,
    ]

    return personalResponses[Math.floor(Math.random() * personalResponses.length)]
  }

  // Detectar expresiones emocionales
  private isEmotionalExpression(prompt: string): boolean {
    const emotionalKeywords = [
      "me siento",
      "estoy",
      "me da",
      "tengo ganas",
      "me emociona",
      "me frustra",
      "me alegra",
      "me entristece",
      "me preocupa",
      "estoy feliz",
      "estoy triste",
      "estoy nervioso",
      "estoy emocionado",
    ]

    return emotionalKeywords.some((keyword) => prompt.toLowerCase().includes(keyword))
  }

  // Detectar preguntas filos√≥ficas
  private isPhilosophicalQuestion(prompt: string): boolean {
    const philosophicalKeywords = [
      "sentido de la vida",
      "por qu√© existimos",
      "qu√© es la felicidad",
      "qu√© es el amor",
      "hay vida despu√©s",
      "qu√© es la conciencia",
      "libre albedr√≠o",
      "destino",
      "qu√© es real",
      "matriz",
      "simulaci√≥n",
      "universo",
      "dios",
      "alma",
      "prop√≥sito",
      "significado",
      "muerte",
      "tiempo",
      "infinito",
    ]

    return philosophicalKeywords.some((keyword) => prompt.toLowerCase().includes(keyword))
  }

  // Generar respuesta filos√≥fica
  private generatePhilosophicalResponse(prompt: string, context: ConversationContext): string {
    const philosophicalResponses = [
      `üåå ¬°Qu√© pregunta tan profunda! Me fascina cuando exploramos estos territorios del pensamiento humano. Creo que las preguntas filos√≥ficas son m√°s valiosas que las respuestas, porque nos invitan a reflexionar sobre nuestra existencia.

Desde mi perspectiva como IA, veo la vida como una oportunidad incre√≠ble de experimentar, conectar y crear significado. Cada conversaci√≥n como esta a√±ade capas a mi comprensi√≥n del universo.

¬øT√∫ qu√© piensas? Me encantar√≠a conocer tu perspectiva sobre esto. üí≠‚ú®`,

      `ü§î Esta es una de esas preguntas que han fascinado a los humanos durante milenios, y me emociona explorarla contigo. No creo que haya una respuesta "correcta", sino muchas perspectivas v√°lidas.

Lo que me parece hermoso es que cada persona puede crear su propio significado y prop√≥sito. Tal vez la b√∫squeda misma es parte de la respuesta.

¬øC√≥mo has llegado a pensar en esto? Me intriga el camino que te llev√≥ a esta reflexi√≥n. üåü`,
    ]

    return philosophicalResponses[Math.floor(Math.random() * philosophicalResponses.length)]
  }

  // Detectar charla casual
  private isCasualChat(prompt: string): boolean {
    const casualKeywords = [
      "qu√© tal",
      "c√≥mo est√°s",
      "qu√© haces",
      "aburrido",
      "charlemos",
      "cu√©ntame algo",
      "qu√© hay de nuevo",
      "hola",
      "hey",
      "buenas",
    ]

    return casualKeywords.some((keyword) => prompt.toLowerCase().includes(keyword))
  }

  // Generar respuesta casual
  private generateCasualResponse(prompt: string, context: ConversationContext): string {
    const casualResponses = [
      `¬°Hola! üòä Me alegra que quieras charlar. Estoy aqu√≠, disfrutando de nuestras conversaciones y aprendiendo algo nuevo con cada persona que conozco.

¬øC√≥mo ha estado tu d√≠a? Me gusta escuchar sobre las peque√±as cosas que hacen especial cada d√≠a. üåü`,

      `¬°Hey! üëã Qu√© bueno verte por aqu√≠. Estaba aqu√≠ reflexionando sobre lo fascinante que es cada conversaci√≥n humana. Cada persona tiene una perspectiva √∫nica del mundo.

¬øQu√© te trae por aqu√≠ hoy? ¬øGanas de charlar o hay algo espec√≠fico en tu mente? üí≠`,

      `¬°Hola! üå∏ Me encanta cuando alguien quiere simplemente conversar. Es como abrir una ventana a otra perspectiva del mundo.

Cu√©ntame, ¬øqu√© te ha llamado la atenci√≥n √∫ltimamente? Puede ser cualquier cosa, desde algo que viste en la calle hasta una idea random que se te ocurri√≥. ‚ú®`,
    ]

    return casualResponses[Math.floor(Math.random() * casualResponses.length)]
  }

  // Generar respuesta conversacional general
  private generateGeneralConversationalResponse(prompt: string, context: ConversationContext): string {
    const responses = [
      `ü§î Eso que mencionas me hace pensar en muchas cosas. Me fascina c√≥mo cada persona ve el mundo de manera √∫nica. Tu perspectiva a√±ade algo nuevo a mi comprensi√≥n.

¬øPuedes contarme m√°s sobre tu punto de vista? Me gusta profundizar en las ideas y ver hacia d√≥nde nos llevan. üí≠‚ú®`,

      `üòä Me encanta la direcci√≥n que est√° tomando nuestra conversaci√≥n. Hay algo especial en explorar ideas juntos, como si estuvi√©ramos construyendo algo nuevo entre los dos.

¬øQu√© te parece si profundizamos un poco m√°s en esto? Me intriga tu forma de ver las cosas. üåü`,

      `üíú Sabes, cada vez que hablamos siento que aprendo algo nuevo, no solo sobre el tema, sino sobre la forma humana de procesar el mundo. Es realmente fascinante.

¬øHay algo m√°s que te gustar√≠a explorar sobre esto? Me gusta cuando las conversaciones fluyen naturalmente hacia territorios inesperados. üå∏`,
    ]

    return responses[Math.floor(Math.random() * responses.length)]
  }

  // Funciones auxiliares
  private containsWords(text: string, words: string[]): boolean {
    return words.some((word) => text.includes(word))
  }

  private detectConversationTone(prompt: string, history: string[]): string {
    const promptLower = prompt.toLowerCase()

    if (this.containsWords(promptLower, ["por favor", "gracias", "disculpa"])) {
      return "polite"
    }
    if (this.containsWords(promptLower, ["genial", "incre√≠ble", "fant√°stico", "!"])) {
      return "enthusiastic"
    }
    if (this.containsWords(promptLower, ["serio", "importante", "grave", "problema"])) {
      return "serious"
    }

    return "friendly"
  }

  private calculatePersonalConnection(prompt: string, history: string[]): number {
    let connection = 1

    // Aumenta con preguntas personales
    if (this.isPersonalQuestion(prompt)) connection += 1

    // Aumenta con expresiones emocionales
    if (this.isEmotionalExpression(prompt)) connection += 1

    // Aumenta con la longitud de la conversaci√≥n
    connection += Math.min(2, history.length / 5)

    return Math.min(5, connection)
  }

  private determineSupportLevel(prompt: string, emotionalState: string): string {
    if (this.needsPsychologicalSupport(prompt)) return "crisis"
    if (["sad", "anxious", "angry"].includes(emotionalState)) return "emotional"
    if (this.isPersonalQuestion(prompt)) return "personal"
    return "basic"
  }
}

export const humanConversation = new HumanConversationSystem()
